import{G_Bus as e}from"../../../libs/G_Control.js";import t from"../g.component.js";export default class i extends t{constructor(){super();this.define()}define(){const e=this;e.opened=!1,e.filteredAttributes=["items","title"],e.selectedValues=[],e.baseTitle="",e.multiple=!1,e.titles=[],e.on("open",e.open.bind(e)).on("choose",e.choose.bind(e))}open(e){const t=this;t.opened?(t.opened=!1,t.setProperty("--body-max-height",0),t.shadow.querySelector(".g-select").classList.remove("active")):(t.setProperty("--body-max-height","182px"),t.opened=!0,t.shadow.querySelector(".g-select").classList.add("active"))}close(){const e=this;e.setProperty("--body-max-height",0),e.shadow.querySelector(".g-select").classList.remove("active"),e.opened=!1}hasOption(e,t){return this[e].indexOf(t)>-1}getOptionPosition(e,t){return this[e].indexOf(t)}removeOption(e,t,i){let s=this.getOptionPosition(e,t[i]);this[e].splice(s,1),t.classList.remove("active")}handleOption(e,t,i,s){const l=this;let o=t[i];l.hasOption(e,o)&&l.multiple?l.removeOption(e,t,i):l.multiple?l[e].push(o):l[e]=[o],s&&s()}changeActiveOption(e){const t=this;let i=e.value;if(t.hasOption("selectedValues",i)){if(!t.multiple){let e=t.shadow.querySelector(".g-select-body .active");e&&e.classList.remove("active")}e.classList.add("active")}}setValue(){const e=this;let t=e.querySelector('[slot="value"]');e.selectedValues.length?t.value=JSON.stringify(e.selectedValues):(t.removeAttribute("value"),t.value="")}setTitle(){const e=this;e.titles.length?e.setAttribute("title",this.titles.toString()):e.setAttribute("title",e.baseTitle)}choose(t){const i=this;let s=i.ascent(t.event,"g-select-option");s&&(i.multiple=i.hasAttribute("multiple"),i.handleOption("selectedValues",s,"value",i.setValue.bind(i)),i.handleOption("titles",s,"textContent",i.setTitle.bind(i)),i.changeActiveOption(s),i.hasAttribute("action")&&e.trigger(i.getAttribute("action"),{name:i.querySelector('[slot="value"]').name,value:i.selectedValues,event:t.event}),i.multiple||i.close())}createHiddenInput(e){return this.markup(this.getTpl("hiddenInput")(e))}async connectedCallback(){const e=this;await e.importTpl("./select/template.js"),e.shadow=this.attachShadow({mode:"open"}),e.mainTpl=e.getTpl("select"),e.baseTitle=this.getAttribute("title"),e.shadow.innerHTML=e.mainTpl({items:JSON.parse(this.getAttribute("items")),title:this.getAttribute("title"),name:this.getAttribute("name"),arrow:this.getAttribute("arrow"),arrowSvg:this.getAttribute("arrowSvg")}),e.append(e.createHiddenInput({name:this.getAttribute("name")})),e.fillAttributes()}disconnectedCallback(){}static get observedAttributes(){return["items","title"]}attributeChangedCallback(e,t,i){const s=this;if(s.mainTpl){if("items"==e){let e=s.shadow.querySelector(".g-select-body"),t=s.getTpl("selectBody");e.innerHTML=t(JSON.parse(i))}if("title"==e){s.shadow.querySelector(".g-select-title").textContent=i}}}}customElements.define("g-select",i);